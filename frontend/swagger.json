{
  "openapi": "3.1.0",
  "info": { "title": "API Documentation", "version": "1.0" },
  "servers": [
    { "url": "http://localhost:8080", "description": "Generated server url" }
  ],
  "security": [{ "Bearer Authentication": [] }],
  "tags": [
    {
      "name": "Order Management",
      "description": "Operations related to orders"
    },
    { "name": "Shop Management", "description": "Operations related to shops" },
    { "name": "User Management", "description": "Operations related to users" },
    {
      "name": "Authentication",
      "description": "Operations related to authentication"
    },
    {
      "name": "Category Management",
      "description": "Operations related to categories"
    },
    {
      "name": "Inventories Management",
      "description": "Operations related to inventories"
    },
    {
      "name": "Product Management",
      "description": "Operations related to products"
    },
    {
      "name": "Partner Management",
      "description": "Operations related to partners"
    },
    {
      "name": "Warehouse Management",
      "description": "Operations related to warehouses"
    }
  ],
  "paths": {
    "/api/warehouses/{warehouseId}": {
      "put": {
        "tags": ["Warehouse Management"],
        "summary": "Update a warehouse by ID",
        "description": "Update the details of an existing warehouse by ID",
        "operationId": "updateWarehouse",
        "parameters": [
          {
            "name": "warehouseId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WarehouseUpdateDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseWarehouse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "put": {
        "tags": ["User Management"],
        "summary": "Update a user",
        "description": "Update a user by their name.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUserRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/BaseResponseUserDTO" }
              }
            }
          }
        }
      }
    },
    "/api/shops/{id}": {
      "get": {
        "tags": ["Shop Management"],
        "summary": "Get shop by id",
        "description": "Fetch shop details by shop id. Accessible only if the current user is an admin, staff or owner of the shop.",
        "operationId": "getShopById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/BaseResponseShopDTO" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Shop Management"],
        "summary": "Update a shop",
        "description": "Update a shop by its ID.",
        "operationId": "updateShop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateShopDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/BaseResponseShopDTO" }
              }
            }
          }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "tags": ["Product Management"],
        "summary": "Get a product",
        "description": "Fetch a product by ID.",
        "operationId": "getProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseResponseProductDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Product Management"],
        "summary": "Update a product",
        "description": "Update an existing product by ID.",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RequestProductDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseResponseProductDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/partners/{id}": {
      "get": {
        "tags": ["Partner Management"],
        "operationId": "getPartnerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/BaseResponsePartner" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Partner Management"],
        "operationId": "updatePartner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PartnerUpdateDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/BaseResponsePartner" }
              }
            }
          }
        }
      }
    },
    "/api/orders/{id}": {
      "get": {
        "tags": ["Order Management"],
        "summary": "Get order by ID",
        "description": "Fetch an order by ID.",
        "operationId": "getOrderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseOrderResponseDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Order Management"],
        "summary": "Update an order",
        "description": "Update an existing order by ID.",
        "operationId": "updateOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateOrderDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/BaseResponseOrder" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Order Management"],
        "summary": "Delete an order",
        "description": "Delete an existing order by ID.",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/BaseResponseVoid" }
              }
            }
          }
        }
      }
    },
    "/api/inventories/{id}": {
      "get": {
        "tags": ["Inventories Management"],
        "summary": "Get a inventory",
        "description": "Update a inventory by its ID.",
        "operationId": "getInventoryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseInventoryResponseDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Inventories Management"],
        "summary": "Update a inventory",
        "description": "Update a inventory by its ID.",
        "operationId": "updateInventory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InventoryUpdateDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseInventoryResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/categories/{id}": {
      "put": {
        "tags": ["Category Management"],
        "summary": "Update a category",
        "description": "Update an existing category by ID.",
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateCategoryDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseCategory"
                }
              }
            }
          }
        }
      }
    },
    "/api/warehouses/{shopId}": {
      "post": {
        "tags": ["Warehouse Management"],
        "summary": "Create a new warehouse for a shop",
        "description": "Create a new warehouse under the specified shop",
        "operationId": "createWarehouse",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WarehouseCreateDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseWarehouse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": ["User Management"],
        "summary": "Get all users",
        "description": "Fetch a list of all registered users.",
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 0 }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 10 }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponsePaginateResponseUserDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["User Management"],
        "summary": "Create a user",
        "description": "Create a user by owner or admin.",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateUserRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/BaseResponseUserDTO" }
              }
            }
          }
        }
      }
    },
    "/api/shops": {
      "post": {
        "tags": ["Shop Management"],
        "summary": "Create a shop",
        "description": "Create a shop by owner or admin.",
        "operationId": "createShop",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateShopDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/BaseResponseShopDTO" }
              }
            }
          }
        }
      }
    },
    "/api/products": {
      "get": {
        "tags": ["Product Management"],
        "summary": "Get page products",
        "description": "Fetch a list of page registered products.",
        "operationId": "getProducts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 0 }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 10 }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponsePaginateResponseResponseProductDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Product Management"],
        "summary": "Create a product",
        "description": "Create a new product",
        "operationId": "createProduct",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RequestProductDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseResponseProductDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/partners": {
      "get": {
        "tags": ["Partner Management"],
        "operationId": "getPartners",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 0 }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 10 }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponsePaginateResponsePartner"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Partner Management"],
        "operationId": "createPartner",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PartnerCreateDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/BaseResponsePartner" }
              }
            }
          }
        }
      }
    },
    "/api/orders": {
      "post": {
        "tags": ["Order Management"],
        "summary": "Create an order",
        "description": "Create a new order.",
        "operationId": "createOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateOrderDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/BaseResponseOrder" }
              }
            }
          }
        }
      }
    },
    "/api/inventories/": {
      "get": {
        "tags": ["Inventories Management"],
        "summary": "Get the inventories",
        "description": "Fetch a list of the registered inventories.",
        "operationId": "getInventory",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 0 }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 10 }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponsePaginateResponseInventoryResponseDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Inventories Management"],
        "summary": "Create a inventory",
        "description": "Create a inventory with the provided data.",
        "operationId": "createInventory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InventoryCreateDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseInventoryResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/categories": {
      "post": {
        "tags": ["Category Management"],
        "summary": "Create a category",
        "description": "Create a new category under a specific shop.",
        "operationId": "createCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCategoryDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseCategory"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/sign-up": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Sign up a new user",
        "description": "Sign up a new user with a username and password.",
        "operationId": "signUp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SignUpRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/BaseResponseUserDTO" }
              }
            }
          }
        }
      }
    },
    "/api/auth/sign-in": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Sign in a user",
        "description": "Perform authentication on a user to sign in!.",
        "operationId": "signIn",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SignInRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseSignInResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/reset-password": {
      "post": {
        "tags": ["Authentication"],
        "operationId": "resetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ResetPasswordRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/BaseResponseVoid" }
              }
            }
          }
        }
      }
    },
    "/api/auth/forgot-password": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Forgot password",
        "description": "Validate email and send a code to reset password.",
        "operationId": "forgotPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ForgotPasswordRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/BaseResponseVoid" }
              }
            }
          }
        }
      }
    },
    "/api/warehouses": {
      "get": {
        "tags": ["Warehouse Management"],
        "summary": "Get paginate warehouses of a shop",
        "description": "Get paginate warehouses of a shop",
        "operationId": "getWarehouses",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 0 }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 10 }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponsePaginateResponseWarehouseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/warehouses/all": {
      "get": {
        "tags": ["Warehouse Management"],
        "summary": "Get all warehouses of a shop",
        "description": "Get all warehouses of a shop",
        "operationId": "getAllWarehouses",
        "parameters": [
          {
            "name": "shopId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseListWarehouseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "tags": ["User Management"],
        "summary": "Current user",
        "description": "Get current user by client token.",
        "operationId": "getMe",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/BaseResponseUserDTO" }
              }
            }
          }
        }
      }
    },
    "/api/shops/": {
      "get": {
        "tags": ["Shop Management"],
        "summary": "Get all shops",
        "description": "Fetch a list of all registered shops.",
        "operationId": "getShops",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 0 }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 10 }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponsePaginateResponseShopDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/products/all": {
      "get": {
        "tags": ["Product Management"],
        "summary": "Get all products",
        "description": "Fetch a list of page registered products of a shop.",
        "operationId": "getAllProducts",
        "parameters": [
          {
            "name": "shopId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseListResponseProductDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/payment-histories/{id}": {
      "get": {
        "tags": ["payment-history-controller"],
        "operationId": "getPaymentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponsePaymentHistoryDetailDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/payment-histories/all": {
      "get": {
        "tags": ["payment-history-controller"],
        "operationId": "getAllPayment",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseListPaymentHistoryResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/partners/all": {
      "get": {
        "tags": ["Partner Management"],
        "summary": "Get all Partners",
        "description": "Fetch all Partners.",
        "operationId": "getAllPartners",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseListPartner"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/all": {
      "get": {
        "tags": ["Order Management"],
        "summary": "Get all orders",
        "description": "Fetch all orders.",
        "operationId": "getAllOrders",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseListOrderResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/": {
      "get": {
        "tags": ["Order Management"],
        "summary": "Get paginate orders",
        "description": "Fetch a list of orders.",
        "operationId": "getOrders",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 0 }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 10 }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponsePageOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/inventories/all": {
      "get": {
        "tags": ["Inventories Management"],
        "summary": "Get all inventories",
        "description": "Fetch a list of all registered inventories.",
        "operationId": "getAllInventory",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseListInventory"
                }
              }
            }
          }
        }
      }
    },
    "/api/categories/all": {
      "get": {
        "tags": ["Category Management"],
        "summary": "Get all categories",
        "description": "Fetch all categories.",
        "operationId": "getAllCategories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseListCategory"
                }
              }
            }
          }
        }
      }
    },
    "/api/categories/": {
      "get": {
        "tags": ["Category Management"],
        "summary": "Get paginate categories",
        "description": "Fetch a list of categories.",
        "operationId": "getCategories",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 0 }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 10 }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "" }
          },
          {
            "name": "createdAt",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponsePaginateResponseCategory"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "WarehouseUpdateDTO": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "address": { "type": "string" },
          "status": { "type": "string" }
        }
      },
      "BaseResponseWarehouse": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/Warehouse" },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "Warehouse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "address": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "status": { "type": "string", "enum": ["ACTIVE", "INACTIVE"] }
        },
        "required": ["status"]
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "password": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 6
          },
          "phoneNumber": { "type": "string", "pattern": "^\\d{10,12}$" },
          "role": { "type": "string" },
          "status": { "type": "string" },
          "email": { "type": "string" }
        }
      },
      "BaseResponseUserDTO": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/UserDTO" },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "UserDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "username": { "type": "string" },
          "name": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "role": { "type": "string" },
          "status": { "type": "string" },
          "shopId": { "type": "integer", "format": "int64" },
          "shopName": { "type": "string" },
          "email": { "type": "string" }
        },
        "required": [
          "createdAt",
          "email",
          "id",
          "name",
          "phoneNumber",
          "role",
          "status",
          "username"
        ]
      },
      "UpdateShopDTO": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "address": { "type": "string" }
        }
      },
      "BaseResponseShopDTO": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/ShopDTO" },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "ShopDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "address": { "type": "string" },
          "users": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserDTO" }
          },
          "createdBy": { "$ref": "#/components/schemas/UserDTO" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        },
        "required": ["createdAt"]
      },
      "RequestProductDTO": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "categoryId": { "type": "integer", "format": "int64" },
          "supplierId": { "type": "integer", "format": "int64" },
          "shopId": { "type": "integer", "format": "int64" },
          "price": { "type": "number", "minimum": 0.0 },
          "unit": {
            "type": "integer",
            "format": "int32",
            "description": "Unit of the product (unit kg/bg)",
            "example": 10
          },
          "imageUrls": { "type": "array", "items": { "type": "string" } }
        },
        "required": ["name", "shopId"]
      },
      "BaseResponseResponseProductDTO": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/ResponseProductDTO" },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "imageUrl": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "status": { "type": "string", "enum": ["ACTIVE", "INACTIVE"] }
        },
        "required": ["status"]
      },
      "Partner": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "contactName": { "type": "string" },
          "phone": { "type": "string" },
          "email": { "type": "string" },
          "address": { "type": "string" },
          "website": { "type": "string" },
          "description": { "type": "string" }
        }
      },
      "ResponseProductDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "category": { "$ref": "#/components/schemas/Category" },
          "supplier": { "$ref": "#/components/schemas/Partner" },
          "shopId": { "type": "integer", "format": "int64" },
          "shopName": { "type": "string" },
          "price": { "type": "number" },
          "unit": { "type": "integer", "format": "int32" },
          "imageUrls": { "type": "array", "items": { "type": "string" } }
        }
      },
      "PartnerUpdateDTO": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "contactName": { "type": "string" },
          "phone": { "type": "string" },
          "email": { "type": "string" },
          "address": { "type": "string" },
          "website": { "type": "string" },
          "description": { "type": "string" }
        }
      },
      "BaseResponsePartner": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/Partner" },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "OrderItemDTO": {
        "type": "object",
        "properties": {
          "inventoryId": { "type": "integer", "format": "int64" },
          "productId": { "type": "integer", "format": "int64" },
          "quantity": { "type": "integer", "format": "int32" },
          "price": { "type": "number" }
        }
      },
      "UpdateOrderDTO": {
        "type": "object",
        "properties": {
          "partnerId": { "type": "integer", "format": "int64" },
          "totalAmount": { "type": "number" },
          "orderItems": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrderItemDTO" }
          }
        }
      },
      "BaseResponseOrder": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/Order" },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "partner": { "$ref": "#/components/schemas/Partner" },
          "user": { "$ref": "#/components/schemas/User" },
          "shop": { "$ref": "#/components/schemas/Shop" },
          "totalAmount": { "type": "number" },
          "orderItems": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrderItem" }
          },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "order": { "$ref": "#/components/schemas/Order" },
          "product": { "$ref": "#/components/schemas/Product" },
          "quantity": { "type": "integer", "format": "int32" },
          "price": { "type": "number" },
          "subtotal": { "type": "number" }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "category": { "$ref": "#/components/schemas/Category" },
          "supplier": { "$ref": "#/components/schemas/Partner" },
          "shop": { "$ref": "#/components/schemas/Shop" },
          "unit": { "type": "integer", "format": "int32" },
          "price": { "type": "number" },
          "description": { "type": "string" },
          "imageUrls": { "type": "array", "items": { "type": "string" } },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "deletedAt": { "type": "string", "format": "date-time" }
        }
      },
      "Shop": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "address": { "type": "string" },
          "createBy": { "$ref": "#/components/schemas/User" },
          "users": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/User" },
            "uniqueItems": true
          },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "username": { "type": "string" },
          "email": { "type": "string" },
          "name": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "role": { "type": "string", "enum": ["OWNER", "STAFF", "ADMIN"] },
          "status": { "type": "string", "enum": ["ACTIVE", "INACTIVE"] }
        },
        "required": ["id", "name", "phoneNumber", "role", "status", "username"]
      },
      "InventoryUpdateDTO": {
        "type": "object",
        "properties": {
          "productId": { "type": "integer", "format": "int64" },
          "warehouseId": { "type": "integer", "format": "int64" },
          "quantity": { "type": "integer", "format": "int32" }
        }
      },
      "BaseResponseInventoryResponseDTO": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/InventoryResponseDTO" },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "InventoryResponseDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "productId": { "type": "integer", "format": "int64" },
          "warehouseId": { "type": "integer", "format": "int64" },
          "quantity": { "type": "integer", "format": "int32" },
          "productName": { "type": "string" },
          "warehouseName": { "type": "string" },
          "createdBy": { "$ref": "#/components/schemas/UserDTO" },
          "createdAt": { "type": "string" },
          "updatedAt": { "type": "string" },
          "price": { "type": "string" }
        }
      },
      "UpdateCategoryDTO": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "imageUrl": { "type": "string" },
          "status": { "type": "string" }
        }
      },
      "BaseResponseCategory": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/Category" },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "WarehouseCreateDTO": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "address": { "type": "string" },
          "shopId": { "type": "integer", "format": "int64" }
        },
        "required": ["shopId"]
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "username": { "type": "string", "maxLength": 20, "minLength": 3 },
          "password": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 6
          },
          "phoneNumber": { "type": "string", "pattern": "^[0-9]{10,12}$" },
          "name": { "type": "string" }
        },
        "required": ["name", "password", "phoneNumber", "username"]
      },
      "CreateShopDTO": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "address": { "type": "string" }
        }
      },
      "PartnerCreateDTO": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "contactName": { "type": "string" },
          "phone": { "type": "string", "pattern": "^(\\+?\\d{1,3})?\\d{10}$" },
          "email": { "type": "string" },
          "address": { "type": "string" },
          "website": { "type": "string" },
          "description": { "type": "string" }
        },
        "required": ["address", "contactName", "email", "name", "phone"]
      },
      "CreateOrderDTO": {
        "type": "object",
        "properties": {
          "partnerId": { "type": "integer", "format": "int64" },
          "totalAmount": { "type": "number" },
          "orderItems": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrderItemDTO" }
          },
          "shipping": { "type": "boolean" },
          "debt": { "type": "boolean" }
        }
      },
      "InventoryCreateDTO": {
        "type": "object",
        "properties": {
          "productId": { "type": "integer", "format": "int64" },
          "warehouseId": { "type": "integer", "format": "int64" },
          "quantity": { "type": "integer", "format": "int32" }
        },
        "required": ["productId", "quantity", "warehouseId"]
      },
      "CreateCategoryDTO": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "imageUrl": { "type": "string" }
        }
      },
      "SignUpRequest": {
        "type": "object",
        "properties": {
          "username": { "type": "string", "maxLength": 20, "minLength": 3 },
          "password": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 6
          },
          "phoneNumber": { "type": "string", "pattern": "^[0-9]{10,12}$" },
          "name": { "type": "string" },
          "email": { "type": "string" }
        },
        "required": ["email", "name", "password", "phoneNumber", "username"]
      },
      "SignInRequest": {
        "type": "object",
        "properties": {
          "username": { "type": "string", "maxLength": 20, "minLength": 3 },
          "password": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 6
          },
          "reCaptchaToken": { "type": "string" }
        },
        "required": ["password", "reCaptchaToken", "username"]
      },
      "BaseResponseSignInResponse": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/SignInResponse" },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "SignInResponse": {
        "type": "object",
        "properties": {
          "token": { "type": "string" },
          "user": { "$ref": "#/components/schemas/UserDTO" }
        }
      },
      "ResetPasswordRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 6
          },
          "token": { "type": "string" }
        },
        "required": ["password", "token"]
      },
      "BaseResponseVoid": {
        "type": "object",
        "properties": {
          "data": { "type": "object" },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "reCaptchaToken": { "type": "string" }
        },
        "required": ["email", "reCaptchaToken"]
      },
      "BaseResponsePaginateResponseWarehouseDTO": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaginateResponseWarehouseDTO"
          },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "PaginateResponseWarehouseDTO": {
        "type": "object",
        "properties": {
          "pageSize": { "type": "integer", "format": "int32" },
          "pageNumber": { "type": "integer", "format": "int32" },
          "totalElements": { "type": "integer", "format": "int32" },
          "totalPages": { "type": "integer", "format": "int32" },
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseDTO" }
          }
        }
      },
      "WarehouseDTO": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "address": { "type": "string" },
          "shopId": { "type": "integer", "format": "int64" },
          "id": { "type": "integer", "format": "int64" },
          "shopName": { "type": "string" },
          "status": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" }
        },
        "required": ["status"]
      },
      "BaseResponseListWarehouseDTO": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseDTO" }
          },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "BaseResponsePaginateResponseUserDTO": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/PaginateResponseUserDTO" },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "PaginateResponseUserDTO": {
        "type": "object",
        "properties": {
          "pageSize": { "type": "integer", "format": "int32" },
          "pageNumber": { "type": "integer", "format": "int32" },
          "totalElements": { "type": "integer", "format": "int32" },
          "totalPages": { "type": "integer", "format": "int32" },
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserDTO" }
          }
        }
      },
      "BaseResponsePaginateResponseShopDTO": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/PaginateResponseShopDTO" },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "PaginateResponseShopDTO": {
        "type": "object",
        "properties": {
          "pageSize": { "type": "integer", "format": "int32" },
          "pageNumber": { "type": "integer", "format": "int32" },
          "totalElements": { "type": "integer", "format": "int32" },
          "totalPages": { "type": "integer", "format": "int32" },
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ShopDTO" }
          }
        }
      },
      "BaseResponsePaginateResponseResponseProductDTO": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaginateResponseResponseProductDTO"
          },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "PaginateResponseResponseProductDTO": {
        "type": "object",
        "properties": {
          "pageSize": { "type": "integer", "format": "int32" },
          "pageNumber": { "type": "integer", "format": "int32" },
          "totalElements": { "type": "integer", "format": "int32" },
          "totalPages": { "type": "integer", "format": "int32" },
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ResponseProductDTO" }
          }
        }
      },
      "BaseResponseListResponseProductDTO": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ResponseProductDTO" }
          },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "BaseResponsePaymentHistoryDetailDTO": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/PaymentHistoryDetailDTO" },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "PaymentHistoryDetailDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "partnerName": { "type": "string" },
          "partnerPhone": { "type": "string" },
          "orderAmount": { "type": "number" },
          "discount": { "type": "number" },
          "shippingFee": { "type": "number" },
          "totalAmount": { "type": "number" },
          "orderItems": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrderItemDTO" }
          },
          "createdAt": { "type": "string", "format": "date-time" },
          "debt": { "type": "boolean" }
        }
      },
      "BaseResponseListPaymentHistoryResponseDTO": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentHistoryResponseDTO"
            }
          },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "PaymentHistoryResponseDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "partnerName": { "type": "string" },
          "partnerPhone": { "type": "string" },
          "orderAmount": { "type": "number" },
          "discount": { "type": "number" },
          "shippingFee": { "type": "number" },
          "totalAmount": { "type": "number" },
          "createdAt": { "type": "string", "format": "date-time" },
          "debt": { "type": "boolean" }
        }
      },
      "BaseResponsePaginateResponsePartner": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/PaginateResponsePartner" },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "PaginateResponsePartner": {
        "type": "object",
        "properties": {
          "pageSize": { "type": "integer", "format": "int32" },
          "pageNumber": { "type": "integer", "format": "int32" },
          "totalElements": { "type": "integer", "format": "int32" },
          "totalPages": { "type": "integer", "format": "int32" },
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Partner" }
          }
        }
      },
      "BaseResponseListPartner": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Partner" }
          },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "BaseResponseOrderResponseDTO": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/OrderResponseDTO" },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "OrderResponseDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "partnerName": { "type": "string" },
          "partnerPhone": { "type": "string" },
          "userName": { "type": "string" },
          "shopId": { "type": "integer", "format": "int64" },
          "totalAmount": { "type": "number" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "BaseResponseListOrderResponseDTO": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrderResponseDTO" }
          },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "BaseResponsePageOrder": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/PageOrder" },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "PageOrder": {
        "type": "object",
        "properties": {
          "totalElements": { "type": "integer", "format": "int64" },
          "totalPages": { "type": "integer", "format": "int32" },
          "first": { "type": "boolean" },
          "last": { "type": "boolean" },
          "size": { "type": "integer", "format": "int32" },
          "content": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Order" }
          },
          "number": { "type": "integer", "format": "int32" },
          "sort": { "$ref": "#/components/schemas/SortObject" },
          "numberOfElements": { "type": "integer", "format": "int32" },
          "pageable": { "$ref": "#/components/schemas/PageableObject" },
          "empty": { "type": "boolean" }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "offset": { "type": "integer", "format": "int64" },
          "sort": { "$ref": "#/components/schemas/SortObject" },
          "pageNumber": { "type": "integer", "format": "int32" },
          "paged": { "type": "boolean" },
          "pageSize": { "type": "integer", "format": "int32" },
          "unpaged": { "type": "boolean" }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "empty": { "type": "boolean" },
          "sorted": { "type": "boolean" },
          "unsorted": { "type": "boolean" }
        }
      },
      "BaseResponseListInventory": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Inventory" }
          },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "Inventory": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "product": { "$ref": "#/components/schemas/Product" },
          "warehouse": { "$ref": "#/components/schemas/Warehouse" },
          "quantity": { "type": "integer", "format": "int32" },
          "createdBy": { "$ref": "#/components/schemas/User" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "BaseResponsePaginateResponseInventoryResponseDTO": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaginateResponseInventoryResponseDTO"
          },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "PaginateResponseInventoryResponseDTO": {
        "type": "object",
        "properties": {
          "pageSize": { "type": "integer", "format": "int32" },
          "pageNumber": { "type": "integer", "format": "int32" },
          "totalElements": { "type": "integer", "format": "int32" },
          "totalPages": { "type": "integer", "format": "int32" },
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/InventoryResponseDTO" }
          }
        }
      },
      "BaseResponseListCategory": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Category" }
          },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "BaseResponsePaginateResponseCategory": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/PaginateResponseCategory" },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "PaginateResponseCategory": {
        "type": "object",
        "properties": {
          "pageSize": { "type": "integer", "format": "int32" },
          "pageNumber": { "type": "integer", "format": "int32" },
          "totalElements": { "type": "integer", "format": "int32" },
          "totalPages": { "type": "integer", "format": "int32" },
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Category" }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer Authentication": {
        "type": "http",
        "name": "Authorization",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
