{
  "openapi": "3.1.0",
  "info": { "title": "API Documentation", "version": "1.0" },
  "servers": [
    { "url": "http://localhost:8080", "description": "Generated server url" }
  ],
  "security": [{ "Bearer Authentication": [] }],
  "tags": [
    { "name": "User Management", "description": "Operations related to users" },
    {
      "name": "Authentication",
      "description": "Operations related to authentication"
    }
  ],
  "paths": {
    "/api/users/{id}": {
      "put": {
        "tags": ["User Management"],
        "summary": "Update a user",
        "description": "Update a user by their name.",
        "operationId": "updateUser",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUserRequest" }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/auth/sign-up": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Sign up a new user",
        "description": "Sign up a new user with a username and password.",
        "operationId": "signUp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SignUpRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/BaseResponseUser" }
              }
            }
          }
        }
      }
    },
    "/api/auth/sign-in": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Sign in a user",
        "description": "Perform authentication on a user to sign in!.",
        "operationId": "signIn",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SignInRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseSignInResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "tags": ["User Management"],
        "summary": "Current user",
        "description": "Get current user by client token.",
        "operationId": "getMe",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/BaseResponseUser" }
              }
            }
          }
        }
      }
    },
    "/api/users/": {
      "get": {
        "tags": ["User Management"],
        "summary": "Get all users",
        "description": "Fetch a list of all registered users.",
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 0 }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 10 }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponsePaginateResponseUser"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "password": { "type": "string" },
          "role": { "type": "string", "enum": ["OWNER", "STAFF", "ADMIN"] }
        }
      },
      "SignUpRequest": {
        "type": "object",
        "properties": {
          "username": { "type": "string", "maxLength": 20, "minLength": 3 },
          "password": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 6
          },
          "phoneNumber": { "type": "string", "pattern": "^[0-9]{10,12}$" },
          "name": { "type": "string" },
          "role": {
            "type": "string",
            "description": "User role",
            "enum": ["STAFF", "ADMIN", "OWNER"],
            "example": "OWNER"
          }
        },
        "required": ["name", "password", "phoneNumber", "username"]
      },
      "BaseResponseUser": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/User" },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "username": { "type": "string" },
          "name": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "role": { "type": "string", "enum": ["OWNER", "STAFF", "ADMIN"] }
        }
      },
      "SignInRequest": {
        "type": "object",
        "properties": {
          "username": { "type": "string", "maxLength": 20, "minLength": 3 },
          "password": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 6
          }
        },
        "required": ["password", "username"]
      },
      "BaseResponseSignInResponse": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/SignInResponse" },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "SignInResponse": {
        "type": "object",
        "properties": {
          "token": { "type": "string" },
          "user": { "$ref": "#/components/schemas/User" }
        }
      },
      "BaseResponsePaginateResponseUser": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/PaginateResponseUser" },
          "message": { "type": "string" },
          "errorCode": {
            "type": "string",
            "enum": [
              "AUTH_MISSING",
              "TOKEN_EXPIRED",
              "TOKEN_INVALID",
              "ACCESS_DENIED",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR"
            ]
          }
        }
      },
      "PaginateResponseUser": {
        "type": "object",
        "properties": {
          "pageSize": { "type": "integer", "format": "int32" },
          "pageNumber": { "type": "integer", "format": "int32" },
          "totalElements": { "type": "integer", "format": "int32" },
          "totalPages": { "type": "integer", "format": "int32" },
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/User" }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer Authentication": {
        "type": "http",
        "name": "Authorization",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
